// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RawDataWebapp;

#nullable disable

namespace RawDataWebapp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240417160953_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RawDataWebapp.Models.BaseballPlayer", b =>
                {
                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("AtBats")
                        .HasColumnType("float");

                    b.Property<double>("BattingAverage")
                        .HasColumnType("float");

                    b.Property<double>("Doubles")
                        .HasColumnType("float");

                    b.Property<double>("GamesPlayed")
                        .HasColumnType("float");

                    b.Property<double>("Hits")
                        .HasColumnType("float");

                    b.Property<double>("HomeRuns")
                        .HasColumnType("float");

                    b.Property<double>("OPS")
                        .HasColumnType("float");

                    b.Property<double>("OnBasePercentage")
                        .HasColumnType("float");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Runs")
                        .HasColumnType("float");

                    b.Property<double>("RunsBattedIn")
                        .HasColumnType("float");

                    b.Property<double>("SluggingPercentage")
                        .HasColumnType("float");

                    b.Property<double>("StolenBases")
                        .HasColumnType("float");

                    b.Property<double>("Strikeouts")
                        .HasColumnType("float");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalBases")
                        .HasColumnType("float");

                    b.Property<double>("Triples")
                        .HasColumnType("float");

                    b.Property<double>("WAR")
                        .HasColumnType("float");

                    b.Property<double>("Walks")
                        .HasColumnType("float");

                    b.HasKey("PlayerName");

                    b.ToTable("Baseball", (string)null);
                });

            modelBuilder.Entity("RawDataWebapp.Models.NBAPlayer", b =>
                {
                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Assist")
                        .HasColumnType("float");

                    b.Property<double?>("AssistToTurnovers")
                        .HasColumnType("float");

                    b.Property<double?>("Blocks")
                        .HasColumnType("float");

                    b.Property<double?>("DefensiveRebounds")
                        .HasColumnType("float");

                    b.Property<double?>("FieldGoalPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("FieldGoalsAttempted")
                        .HasColumnType("float");

                    b.Property<double?>("FieldGoalsMade")
                        .HasColumnType("float");

                    b.Property<double?>("FreeThrowAttempted")
                        .HasColumnType("float");

                    b.Property<double?>("FreeThrowPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("FreeThrowsMade")
                        .HasColumnType("float");

                    b.Property<double?>("GamesPlayed")
                        .HasColumnType("float");

                    b.Property<double?>("GamesStarted")
                        .HasColumnType("float");

                    b.Property<double?>("Minutes")
                        .HasColumnType("float");

                    b.Property<double?>("OffensiveRebounds")
                        .HasColumnType("float");

                    b.Property<double?>("PersonalFouls")
                        .HasColumnType("float");

                    b.Property<double?>("Points")
                        .HasColumnType("float");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Steals")
                        .HasColumnType("float");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ThreePointsAttempted")
                        .HasColumnType("float");

                    b.Property<double?>("ThreePointsMade")
                        .HasColumnType("float");

                    b.Property<double?>("ThreePointsPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("TotalRebounds")
                        .HasColumnType("float");

                    b.Property<double?>("Turnovers")
                        .HasColumnType("float");

                    b.HasKey("PlayerName");

                    b.ToTable("NBA", (string)null);
                });

            modelBuilder.Entity("RawDataWebapp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("RawDataWebapp.Models.WNBAPlayer", b =>
                {
                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Assist")
                        .HasColumnType("float");

                    b.Property<double?>("AssistToTurnovers")
                        .HasColumnType("float");

                    b.Property<double?>("Blocks")
                        .HasColumnType("float");

                    b.Property<double?>("DefensiveRebounds")
                        .HasColumnType("float");

                    b.Property<double?>("FieldGoalPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("FieldGoalsAttempted")
                        .HasColumnType("float");

                    b.Property<double?>("FieldGoalsMade")
                        .HasColumnType("float");

                    b.Property<double?>("FreeThrowAttempted")
                        .HasColumnType("float");

                    b.Property<double?>("FreeThrowPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("FreeThrowsMade")
                        .HasColumnType("float");

                    b.Property<double?>("GamesPlayed")
                        .HasColumnType("float");

                    b.Property<double?>("GamesStarted")
                        .HasColumnType("float");

                    b.Property<double?>("Minutes")
                        .HasColumnType("float");

                    b.Property<double?>("OffensiveRebounds")
                        .HasColumnType("float");

                    b.Property<double?>("PersonalFouls")
                        .HasColumnType("float");

                    b.Property<double?>("Points")
                        .HasColumnType("float");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Steals")
                        .HasColumnType("float");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ThreePointsAttempted")
                        .HasColumnType("float");

                    b.Property<double?>("ThreePointsMade")
                        .HasColumnType("float");

                    b.Property<double?>("ThreePointsPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("TotalRebounds")
                        .HasColumnType("float");

                    b.Property<double?>("Turnovers")
                        .HasColumnType("float");

                    b.HasKey("PlayerName");

                    b.ToTable("WNBA", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
